Sign up on github.com to create github account.

Download GitBash in PC. It works like terminal in VS code.

Configuring Git:
In GitBash write:   git config --global user.name "F-hayyat"    /(username). press enter and type,    git config --global user.email "m.faisal.hayyat@gmail.com    /(user email).

TO show what you type, write   git config --list  .

Open GitBash and type "git --version" after $ sign, to check git version and it also tells that git is working properly.



CLone Repository:
Clone repository means to copy from remote(GitHub) to Local(Pc or Code editor).
For this, open repository in GitHub, open code and copy HTTPs.
Go to VS code terminal and type      git clone and paste HTTPs link.



To go in inner folder type,    cd and inner folder name.
Return to outer folder:  cd ..   (cd space dot dot)

To auto complete line press tab in terminal.

To see all files in a folder type,    ls   and it will give all files of that folder.

To see all hidden files in folder type,   ls-a   .
if in hidden files it shows a git file that means this file is present in github.

Type,   git status    to check if files are commited or not .
When we check git status, it give us 4 type of files,
1: Untracked Files: New files that git don't know yet.
2: Modified Files:  Files that have something changed.
3: Staged FIles:    Files that are ready to commit.
4: Unmodified Files:  Unchanged files.



Afet modifying a file we have two thing to do,
1: to add files,   ( when we add a file , it goes in staged form).
2: to commit files.

To add file:  git add 'file name'
To commit file:  git commit -m "Some Message"


Push Command:
To push data on GitHub     git push origin main    .



Start Locally From PC:
To make a local folder a git repository type,    git init      .
Then check    git status
Then   git add
Then    git commit -m "Some Message"
Then go to GitHub and create new repository.
Then write,     git remote add origin <Link HTTPs>
Then to verify origin write,    git remote -v
To check branch,    git branch
To rename branch,    git branch -M new name

After setting git branch main again   git push origin main

you can create a new branch by typing     git checkout -b  new branch name
TO go yo that new branch        git checkout branch name
To delete a branch        git branch -d branch name
TO check difference between two branches    git diff branch name


Merging Code: Merging Two branches,
Way 1: Using GitHub
create pull request and merge code

To get that Merging data on your local (From GitHub to VS code)   Create Pull Command
    git pull origin main

    Way 2:  Write in terminal     git merge branch name


    Git Conflicts:
    When we change in both branches at same line and same place different things , then Git cannot understand whose branch code is to be write and whose not.


    Undoing changes:
    1: Staged changes:  changes that are added but still not commited
         git reset file name         for 1 or 2 files
         git reset                for many changes

    2: Commited changes:   changes that are commited
         git reset HEAD~1            for 1 commit to change

         git log       to check changes

         git reset <commit hash>        for many changes that are commited

         Commit hash:   A unique number of every commit 
                        git log             to get commit hash

 To reset change from local (VS code)    git reset --hard <commit hash>   


 Fork:
       To work on some other person's Repository,  go on github to that person's repo and fork the data on your git account , do your work in that data and again create pull request and merge that data to that repo.             
